{"version":3,"sources":["types/Status.ts","components/Context/TodoContext.tsx","components/Loader/Loader.tsx","components/TodoFilter/TodoFilter.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","api.ts","components/TodoModal/TodoModal.tsx","components/TodoApp/TodoApp.tsx","App.tsx","index.tsx"],"names":["Status","TodosContext","React","createContext","todos","setTodos","showModal","setShowModal","selectedTodo","setSelectedTodo","filter","setFilter","text","setText","TodosProvider","children","useState","value","useMemo","Provider","Loader","className","TodoFilter","useContext","onChange","event","target","type","placeholder","length","style","pointerEvents","onClick","TodoItem","todo","id","title","completed","cn","TodoList","cortedTodos","trim","toLowerCase","includes","filterTodos","map","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","user","setUser","userId","useEffect","getUser","href","email","name","TodoApp","loading","setLoading","finally","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d960670.chunk.js","sourcesContent":["export const Status = {\n  ALL: 'all',\n  ACTIVE: 'false',\n  COMPLETED: 'true',\n};\n","import React, { useState, useMemo } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { Status } from '../../types/Status';\n\nexport const TodosContext = React.createContext<{\n  todos: Todo[],\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>,\n  showModal: boolean,\n  setShowModal: React.Dispatch<React.SetStateAction<boolean>>,\n  selectedTodo: Todo | null,\n  setSelectedTodo: React.Dispatch<React.SetStateAction<Todo | null>>,\n  filter: string,\n  setFilter: React.Dispatch<React.SetStateAction<string>>,\n  text: string,\n  setText: React.Dispatch<React.SetStateAction<string>>,\n}>({\n  todos: [],\n  setTodos: () => {},\n  showModal: false,\n  setShowModal: () => {},\n  selectedTodo: null,\n  setSelectedTodo: () => {},\n  filter: Status.ALL,\n  setFilter: () => {},\n  text: '',\n  setText: () => {},\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const TodosProvider: React.FC<Props> = ({ children }) => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [showModal, setShowModal] = useState<boolean>(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState<string>(Status.ALL);\n  const [text, setText] = useState('');\n\n  const value = useMemo(() => ({\n    todos,\n    setTodos,\n    showModal,\n    setShowModal,\n    selectedTodo,\n    setSelectedTodo,\n    filter,\n    setFilter,\n    text,\n    setText,\n  }), [todos, showModal, selectedTodo, filter, text]);\n\n  return (\n    <TodosContext.Provider value={value}>\n      {children}\n    </TodosContext.Provider>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useContext } from 'react';\nimport { TodosContext } from '../Context/TodoContext';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const {\n    filter,\n    setFilter,\n    text,\n    setText,\n  } = useContext(TodosContext);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={(event) => setFilter(event.target.value)}\n          >\n            <option value={Status.ALL}>All</option>\n            <option value={Status.ACTIVE}>Active</option>\n            <option value={Status.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={text}\n          onChange={(event) => setText(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {text.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setText('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React, { useContext } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { TodosContext } from '../Context/TodoContext';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n  } = todo;\n\n  const {\n    selectedTodo,\n    setSelectedTodo,\n    showModal,\n    setShowModal,\n  } = useContext(TodosContext);\n\n  const selectTodo = () => {\n    setSelectedTodo(todo);\n    setShowModal(true);\n  };\n\n  return (\n    <>\n      <tr\n        data-cy=\"todo\"\n        className={cn({\n          'has-background-info-light': selectedTodo === todo && showModal,\n        })}\n      >\n        <td className=\"is-vcentered\">{id}</td>\n\n        <td className=\"is-vcentered\">\n          {completed && (\n            <span className=\"icon\" data-cy=\"iconCompleted\">\n              <i className=\"fas fa-check\" />\n            </span>\n          )}\n        </td>\n\n        <td className=\"is-vcentered is-expanded\">\n          <p\n            className={cn({\n              'has-text-danger': !completed,\n              'has-text-success': completed,\n            })}\n          >\n            {title}\n          </p>\n        </td>\n\n        <td className=\"has-text-right is-vcentered\">\n          <button\n            data-cy=\"selectButton\"\n            className=\"button\"\n            type=\"button\"\n            onClick={() => selectTodo()}\n          >\n            <span className=\"icon\">\n              <i className={`far ${selectedTodo === todo && showModal ? (\n                'fa-eye-slash'\n              ) : ('fa-eye')}`}\n              />\n            </span>\n          </button>\n        </td>\n      </tr>\n    </>\n  );\n};\n","import React, { useContext } from 'react';\nimport { TodoItem } from '../TodoItem';\nimport { TodosContext } from '../Context/TodoContext';\nimport { Status } from '../../types/Status';\n\nexport const TodoList: React.FC = () => {\n  const { todos, text, filter } = useContext(TodosContext);\n\n  const filterTodos = () => {\n    const cortedTodos = () => {\n      switch (filter) {\n        case Status.ACTIVE:\n          return todos.filter((todo) => !todo.completed);\n        case Status.COMPLETED:\n          return todos.filter((todo) => todo.completed);\n        case Status.ALL:\n        default:\n          return todos;\n      }\n    };\n\n    return text.trim() ? cortedTodos().filter((todo) => {\n      return todo.title.toLowerCase().includes(text.toLowerCase());\n    }) : cortedTodos();\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filterTodos().map((todo) => (\n          <TodoItem todo={todo} key={todo.id} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState, useContext } from 'react';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { TodosContext } from '../Context/TodoContext';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoModal: React.FC<Props> = ({ todo }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const { setShowModal } = useContext(TodosContext);\n\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  useEffect(() => {\n    getUser(userId)\n      .then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setUser(null);\n                setShowModal(false);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useContext, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { TodoFilter } from '../TodoFilter';\nimport { TodoList } from '../TodoList';\nimport { getTodos } from '../../api';\nimport { TodosContext } from '../Context/TodoContext';\nimport { TodoModal } from '../TodoModal';\n\nexport const TodoApp: React.FC = () => {\n  const {\n    todos,\n    selectedTodo,\n    showModal,\n    setTodos,\n  } = useContext(TodosContext);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {!!loading && (\n                <Loader />\n              )}\n\n              {!loading && todos.length > 0 && (\n                <TodoList />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showModal && selectedTodo && (\n        <TodoModal todo={selectedTodo} />\n      )}\n    </>\n  );\n};\n","/* eslint-disable max-len */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodosProvider } from './components/Context/TodoContext';\nimport { TodoApp } from './components/TodoApp';\n\nexport const App: React.FC = () => {\n  return (\n    <TodosProvider>\n      <TodoApp />\n    </TodosProvider>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}